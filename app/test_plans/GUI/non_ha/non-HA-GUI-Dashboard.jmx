<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.9" jmeter="3.0 r1743807">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="ECM GUI Test" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${loops}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${users}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${rampup}</stringProp>
        <longProp name="ThreadGroup.start_time">1497038026000</longProp>
        <longProp name="ThreadGroup.end_time">1497038026000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config - Tenants username" enabled="true">
          <stringProp name="filename">/app/performance_production/test_plans/GUI/non_ha/GUI_tenants.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">tenant,username</stringProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
          <stringProp name="CookieManager.policy">standard</stringProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.config.FirefoxDriverConfig guiclass="com.googlecode.jmeter.plugins.webdriver.config.gui.FirefoxDriverConfigGui" testclass="com.googlecode.jmeter.plugins.webdriver.config.FirefoxDriverConfig" testname="jp@gc - Firefox Driver Config" enabled="true">
          <stringProp name="WebDriverConfig.proxy_type">DIRECT</stringProp>
          <stringProp name="WebDriverConfig.proxy_pac_url"></stringProp>
          <stringProp name="WebDriverConfig.http_host"></stringProp>
          <intProp name="WebDriverConfig.http_port">8080</intProp>
          <boolProp name="WebDriverConfig.use_http_for_all_protocols">true</boolProp>
          <stringProp name="WebDriverConfig.https_host"></stringProp>
          <intProp name="WebDriverConfig.https_port">8080</intProp>
          <stringProp name="WebDriverConfig.ftp_host"></stringProp>
          <intProp name="WebDriverConfig.ftp_port">8080</intProp>
          <stringProp name="WebDriverConfig.socks_host"></stringProp>
          <intProp name="WebDriverConfig.socks_port">8080</intProp>
          <stringProp name="WebDriverConfig.no_proxy">localhost</stringProp>
          <boolProp name="WebDriverConfig.maximize_browser">false</boolProp>
          <boolProp name="WebDriverConfig.reset_per_iteration">true</boolProp>
          <boolProp name="WebDriverConfig.dev_mode">false</boolProp>
          <boolProp name="FirefoxDriverConfig.general.useragent.override.enabled">false</boolProp>
          <boolProp name="FirefoxDriverConfig.network.negotiate-auth.allow-insecure-ntlm-v1">false</boolProp>
          <collectionProp name="FirefoxDriverConfig.general.extensions"/>
          <collectionProp name="FirefoxDriverConfig.general.preferences"/>
        </com.googlecode.jmeter.plugins.webdriver.config.FirefoxDriverConfig>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig guiclass="com.googlecode.jmeter.plugins.webdriver.config.gui.ChromeDriverConfigGui" testclass="com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig" testname="jp@gc - Chrome Driver Config" enabled="false">
          <stringProp name="WebDriverConfig.proxy_type">SYSTEM</stringProp>
          <stringProp name="WebDriverConfig.proxy_pac_url"></stringProp>
          <stringProp name="WebDriverConfig.http_host"></stringProp>
          <intProp name="WebDriverConfig.http_port">8080</intProp>
          <boolProp name="WebDriverConfig.use_http_for_all_protocols">true</boolProp>
          <stringProp name="WebDriverConfig.https_host"></stringProp>
          <intProp name="WebDriverConfig.https_port">8080</intProp>
          <stringProp name="WebDriverConfig.ftp_host"></stringProp>
          <intProp name="WebDriverConfig.ftp_port">8080</intProp>
          <stringProp name="WebDriverConfig.socks_host"></stringProp>
          <intProp name="WebDriverConfig.socks_port">8080</intProp>
          <stringProp name="WebDriverConfig.no_proxy">localhost</stringProp>
          <boolProp name="WebDriverConfig.maximize_browser">false</boolProp>
          <boolProp name="WebDriverConfig.reset_per_iteration">true</boolProp>
          <boolProp name="WebDriverConfig.dev_mode">false</boolProp>
          <stringProp name="ChromeDriverConfig.chromedriver_path">/home/perftest1/chromedriver</stringProp>
          <boolProp name="ChromeDriverConfig.android_enabled">false</boolProp>
        </com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="jp@gc - WebDriver Sampler -  ECM Get 1st Page Website" enabled="true">
          <stringProp name="WebDriverSampler.script">// 2 minutes max timeout that will throw an error if expires
//var firefox = JavaImporter(org.openqa.selenium.firefox.FirefoxDriver)
var wait = new org.openqa.selenium.support.ui.WebDriverWait(WDS.browser, 120)
WDS.sampleResult.setSampleLabel(&apos;URL sample&apos;)
WDS.sampleResult.sampleStart() //sample starting point

//WDS.browser.get(&apos;${website}&apos;) // read from CSV Data Source file
WDS.browser.get(&apos;${website}/${tenant}&apos;) // read from User Defined Variables and CSV Data Source file
//Wait for page loaded with Login
try {
wait.until(org.openqa.selenium.support.ui.ExpectedConditions.titleContains(&quot;Login&quot;))
var loginReady=WDS.browser.findElement(org.openqa.selenium.By.id(&apos;Login.Submit&apos;)) 
}
catch(err) {
    PageNotLoaded = (&apos;Error: Initial-Login Page load Timed out&apos;)
    WDS.log.info(PageNotLoaded)
} 
finally {
//WDS.log.info(loginReady)
}
// id=&quot;Login.Submit&quot;
WDS.sampleResult.sampleEnd()

//java.lang.Thread.sleep(&apos;${wait10}&apos;) // wait before starting login
</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="jp@gc - WebDriver Sampler -  ECM Login" enabled="true">
          <stringProp name="TestPlan.comments">- after GUI login, dashboard is displayed for 15 minutes</stringProp>
          <stringProp name="WebDriverSampler.script">var wait = new org.openqa.selenium.support.ui.WebDriverWait(WDS.browser, 120)
var element=WDS.browser.findElement(org.openqa.selenium.By.id(&apos;IDToken1&apos;))
element.sendKeys([&apos;${username}&apos;]) 

var passwordField = WDS.browser.findElement(org.openqa.selenium.By.id(&apos;IDToken2&apos;)) //define username field
passwordField.sendKeys([&apos;${password}&apos;]) // read from User Defined Variables

var disclaimerBoxbutton
try {
disclaimerBoxbutton = WDS.browser.findElement(org.openqa.selenium.By.id(&apos;cbxDisclaimer&apos;)) //
disclaimerBoxbutton.click() //click 
}
catch(err) {
    disclaimerBoxbutton = (&apos;Error&apos;)
//    WDS.log.info(WDS.name + &apos; --* disclaimerBoxbutt Error *--&apos;) //log message
} 
finally {

var loginButton=WDS.browser.findElement(org.openqa.selenium.By.id(&apos;Login.Submit&apos;)) //define login submit button
loginButton.click() //click on the login button

WDS.sampleResult.setSampleLabel(&apos;Login sample&apos;)
WDS.sampleResult.sampleStart() //sample starting point

// It looks for &quot;&quot;Tenant Dashboard&quot; text to assess if page loaded completely after login  
//  xpath=/html/body/div[2]/div/div[2]/div[1]/h1/span
try {
wait.until(org.openqa.selenium.support.ui.ExpectedConditions.textToBePresentInElementLocated(org.openqa.selenium.By.xpath(&quot;/html/body/div[2]/div/div[2]/div[1]/h1/span&quot;), &quot;Tenant Dashboard&quot;))
var tenantDashboard=WDS.browser.findElement(org.openqa.selenium.By.xpath(&quot;/html/body/div[2]/div/div[2]/div[1]/h1/span&quot;)) 
}
catch(err) {
    DashboardNotLoaded = (&apos;Error: Dashboard Page load Timed out&apos;)
    WDS.log.info(DashboardNotLoaded)
} 
finally {
//WDS.log.info(tenantDashboard)
}

WDS.sampleResult.sampleEnd() // sample end point

}


    





</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="jp@gc - WebDriver Sampler -  ECM Dashboard" enabled="true">
          <stringProp name="TestPlan.comments">- after GUI login, dashboard is displayed for XX minutes</stringProp>
          <stringProp name="WebDriverSampler.script">WDS.sampleResult.setSampleLabel(&apos;Dashboard sample&apos;)
WDS.sampleResult.sampleStart() //sample starting point

java.lang.Thread.sleep(60000 * &apos;${dashboard_wait}&apos;)
// stay on Dashboard page for dashboard_wait minutes
//java.lang.Thread.sleep(&apos;${wait600}&apos;)

WDS.sampleResult.sampleEnd()




    





</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.SynthesisReportGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Synthesis Report (filtered)" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">${results}/GUI/${users}/raw/synthesis-${users}.csv</stringProp>
          <longProp name="interval_grouping">500</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels">Setup.*</stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">true</boolProp>
          <boolProp name="useGroupName">true</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ThreadsStateOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Active Threads Over Time" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">${results}/GUI/${users}/raw/threads-${users}.csv</stringProp>
          <longProp name="interval_grouping">500</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="jp@gc - PerfMon System Metrics Collector CPU" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">${results}/GUI/${users}/raw/cpu-${users}.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="metricConnections">
            <collectionProp name="459191947">
              <stringProp name="1147350053">${ecm}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-7759862">
              <stringProp name="37021999">${pg}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="1403818974">
              <stringProp name="-1281148164">${blade}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1867049420">
              <stringProp name="1224139780">${x208}</stringProp>
              <stringProp reference="../../collectionProp[3]/stringProp[2]"/>
              <stringProp reference="../../collectionProp[3]/stringProp[3]"/>
              <stringProp reference="../../collectionProp[3]/stringProp[4]"/>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="jp@gc - PerfMon System Metrics Collector Memory" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">${results}/GUI/${users}/raw/mem-${users}.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="metricConnections">
            <collectionProp name="-1841522374">
              <stringProp name="1147350053">${ecm}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="1986493113">
              <stringProp name="37021999">${pg}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-896895347">
              <stringProp name="-1281148164">${blade}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="127203555">
              <stringProp name="1224139780">${x208}</stringProp>
              <stringProp reference="../../collectionProp[3]/stringProp[2]"/>
              <stringProp reference="../../collectionProp[3]/stringProp[3]"/>
              <stringProp reference="../../collectionProp[3]/stringProp[4]"/>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="jp@gc - PerfMon System Metrics Collector Network IO RX" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">${results}/GUI/${users}/raw/netrx-${users}.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="metricConnections">
            <collectionProp name="1901027029">
              <stringProp name="1147350053">${ecm}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="-2032735023">bytesrecv</stringProp>
            </collectionProp>
            <collectionProp name="1434075220">
              <stringProp name="37021999">${pg}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="-2032735023">bytesrecv</stringProp>
            </collectionProp>
            <collectionProp name="-1449313240">
              <stringProp name="-1281148164">${blade}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="-2032735023">bytesrecv</stringProp>
            </collectionProp>
            <collectionProp name="-425214338">
              <stringProp name="1224139780">${x208}</stringProp>
              <stringProp reference="../../collectionProp[3]/stringProp[2]"/>
              <stringProp reference="../../collectionProp[3]/stringProp[3]"/>
              <stringProp reference="../../collectionProp[3]/stringProp[4]"/>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="jp@gc - PerfMon System Metrics Collector Network IO TX" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">${results}/GUI/${users}/raw/nettx-${users}.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="metricConnections">
            <collectionProp name="1797736546">
              <stringProp name="1147350053">${ecm}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="-2032704893">bytessent</stringProp>
            </collectionProp>
            <collectionProp name="1330784737">
              <stringProp name="37021999">${pg}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="-2032704893">bytessent</stringProp>
            </collectionProp>
            <collectionProp name="-1552603723">
              <stringProp name="-1281148164">${blade}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="-2032704893">bytessent</stringProp>
            </collectionProp>
            <collectionProp name="-528504821">
              <stringProp name="1224139780">${x208}</stringProp>
              <stringProp reference="../../collectionProp[3]/stringProp[2]"/>
              <stringProp reference="../../collectionProp[3]/stringProp[3]"/>
              <stringProp reference="../../collectionProp[3]/stringProp[4]"/>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="jp@gc - PerfMon System Metrics Collector Disk IO Write" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">${results}/GUI/${users}/raw/write-${users}.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="metricConnections">
            <collectionProp name="137502094">
              <stringProp name="1147350053">${ecm}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2112896831">Disks I/O</stringProp>
              <stringProp name="-633177108">writebytes</stringProp>
            </collectionProp>
            <collectionProp name="-329449715">
              <stringProp name="37021999">${pg}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2112896831">Disks I/O</stringProp>
              <stringProp name="-633177108">writebytes</stringProp>
            </collectionProp>
            <collectionProp name="1082129121">
              <stringProp name="-1281148164">${blade}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2112896831">Disks I/O</stringProp>
              <stringProp name="-633177108">writebytes</stringProp>
            </collectionProp>
            <collectionProp name="2106228023">
              <stringProp name="1224139780">${x208}</stringProp>
              <stringProp reference="../../collectionProp[3]/stringProp[2]"/>
              <stringProp reference="../../collectionProp[3]/stringProp[3]"/>
              <stringProp reference="../../collectionProp[3]/stringProp[4]"/>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="jp@gc - PerfMon System Metrics Collector Disk IO Read" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">${results}/GUI/${users}/raw/read-${users}.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="metricConnections">
            <collectionProp name="1562674137">
              <stringProp name="1147350053">${ecm}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2112896831">Disks I/O</stringProp>
              <stringProp name="-1110510443">readbytes</stringProp>
            </collectionProp>
            <collectionProp name="1095722328">
              <stringProp name="37021999">${pg}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2112896831">Disks I/O</stringProp>
              <stringProp name="-1110510443">readbytes</stringProp>
            </collectionProp>
            <collectionProp name="-1787666132">
              <stringProp name="-1281148164">${blade}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2112896831">Disks I/O</stringProp>
              <stringProp name="-1110510443">readbytes</stringProp>
            </collectionProp>
            <collectionProp name="-763567230">
              <stringProp name="1224139780">${x208}</stringProp>
              <stringProp reference="../../collectionProp[3]/stringProp[2]"/>
              <stringProp reference="../../collectionProp[3]/stringProp[3]"/>
              <stringProp reference="../../collectionProp[3]/stringProp[4]"/>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.jmxmon.JMXMonCollector guiclass="kg.apc.jmeter.vizualizers.JMXMonGui" testclass="kg.apc.jmeter.jmxmon.JMXMonCollector" testname="JBOSS JMX" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>false</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>false</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
            </value>
          </objProp>
          <stringProp name="filename">${results}/GUI/${users}/raw/ecmjmx-${users}.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="samplers">
            <collectionProp name="-509347637">
              <stringProp name="563092484">${ecm1} jboss threads</stringProp>
              <stringProp name="904974450">service:jmx:remoting-jmx://${ecm1}:${ecm_jboss_port}</stringProp>
              <stringProp name="92668751">admin</stringProp>
              <stringProp name="-904532845">Admin!23</stringProp>
              <stringProp name="1641949653">java.lang:type=Threading</stringProp>
              <stringProp name="-158340056">ThreadCount</stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="1237">false</stringProp>
              <stringProp name="1237">false</stringProp>
            </collectionProp>
            <collectionProp name="120962311">
              <stringProp name="-2117641786">${ecm1} jboss heap alloc</stringProp>
              <stringProp name="904974450">service:jmx:remoting-jmx://${ecm1}:${ecm_jboss_port}</stringProp>
              <stringProp name="92668751">admin</stringProp>
              <stringProp name="-904532845">Admin!23</stringProp>
              <stringProp name="-1508861468">java.lang:type=Memory</stringProp>
              <stringProp name="-687755404">HeapMemoryUsage</stringProp>
              <stringProp name="3599293">used</stringProp>
              <stringProp name="1237">false</stringProp>
              <stringProp name="1237">false</stringProp>
            </collectionProp>
            <collectionProp name="-526606977">
              <stringProp name="-794638674">${ecm1} jboss class loaded   </stringProp>
              <stringProp reference="../../collectionProp[2]/stringProp[2]"/>
              <stringProp reference="../../collectionProp[2]/stringProp[3]"/>
              <stringProp reference="../../collectionProp[2]/stringProp[4]"/>
              <stringProp name="298852167">java.lang:type=ClassLoading</stringProp>
              <stringProp name="1141682300">LoadedClassCount</stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="1237">false</stringProp>
              <stringProp name="1237">false</stringProp>
            </collectionProp>
            <collectionProp name="-658756915">
              <stringProp name="-2135116939">${ecm1} jboss class unloaded   </stringProp>
              <stringProp reference="../../collectionProp[2]/stringProp[2]"/>
              <stringProp reference="../../collectionProp[2]/stringProp[3]"/>
              <stringProp reference="../../collectionProp[2]/stringProp[4]"/>
              <stringProp reference="../../collectionProp[3]/stringProp[5]"/>
              <stringProp name="1672865045">UnloadedClassCount</stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="1237">false</stringProp>
              <stringProp name="1237">false</stringProp>
            </collectionProp>
            <collectionProp name="1597588336">
              <stringProp name="1692026860">${ecm1} jboss gc time</stringProp>
              <stringProp reference="../../collectionProp[2]/stringProp[2]"/>
              <stringProp reference="../../collectionProp[2]/stringProp[3]"/>
              <stringProp reference="../../collectionProp[2]/stringProp[4]"/>
              <stringProp name="1647148085">java.lang:type=GarbageCollector,name=G1 Young Generation</stringProp>
              <stringProp name="-691027285">CollectionTime</stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="1231">true</stringProp>
              <stringProp name="1237">false</stringProp>
            </collectionProp>
            <collectionProp name="-55631413">
              <stringProp name="897712080">${ecm1} jboss gc count</stringProp>
              <stringProp reference="../../collectionProp[2]/stringProp[2]"/>
              <stringProp reference="../../collectionProp[2]/stringProp[3]"/>
              <stringProp reference="../../collectionProp[2]/stringProp[4]"/>
              <stringProp reference="../../collectionProp[5]/stringProp[5]"/>
              <stringProp name="37477617">CollectionCount</stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="1231">true</stringProp>
              <stringProp name="1237">false</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="ResultCollector.success_only_logging">true</boolProp>
        </kg.apc.jmeter.jmxmon.JMXMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="PG JMX " enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">${results}/GUI/${users}/raw/pgjmx-${users}.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="metricConnections">
            <collectionProp name="1830016561">
              <stringProp name="-1187101997">${pg1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="73589">JMX</stringProp>
              <stringProp name="1492708167">url=localhost\:${pg_tomcat_port}:label=tomcat heap:unit=mb:memory-usage</stringProp>
            </collectionProp>
            <collectionProp name="252046374">
              <stringProp reference="../../collectionProp/stringProp"/>
              <stringProp reference="../../collectionProp/stringProp[2]"/>
              <stringProp reference="../../collectionProp/stringProp[3]"/>
              <stringProp name="1708554785">url=localhost\:${pg_dve_port}:label=dve heap:unit=mb:memory-usage</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="ResultCollector.success_only_logging">true</boolProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="jp@gc - WebDriver Sampler -  ECM Logout" enabled="false">
          <stringProp name="WebDriverSampler.script">var wait = new org.openqa.selenium.support.ui.WebDriverWait(WDS.browser, 120)
WDS.browser.get(&apos;${website}/#asset/vdcs&apos;) // list of VDCs
// VDC list : wait till page loaded
try {
wait.until(org.openqa.selenium.support.ui.ExpectedConditions.elementToBeClickable(org.openqa.selenium.By.linkText(&apos;vdc_0000&apos;))) 
var firstlogoutButton=WDS.browser.findElement(org.openqa.selenium.By.xpath(&quot;/html/body/div[1]/div/div[1]/div[4]/div/div/span/div[3]&quot;))
}
catch(err) {
    firstlogoutButton = (&apos;Error: VDC list Page load Timed out&apos;)
    WDS.log.info(firstlogoutButton)
} 
finally {
firstlogoutButton.click()
}

var logoutButton=WDS.browser.findElement(org.openqa.selenium.By.xpath(&quot;/html/body/div[1]/div/div[1]/div[4]/div/ul/li[6]/a&quot;))
logoutButton.click()

WDS.sampleResult.setSampleLabel(&apos;Logout sample&apos;)
WDS.sampleResult.sampleStart() //sample starting point

var lastlogoutButton=WDS.browser.findElement(org.openqa.selenium.By.xpath(&quot;/html/body/div[4]/div/div/div[2]/button[1]/span&quot;))
lastlogoutButton.click() //click on the logout button

WDS.sampleResult.sampleEnd()//sample ending point




</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="website" elementType="Argument">
              <stringProp name="Argument.name">website</stringProp>
              <stringProp name="Argument.value">https://ecm156x50.ete.ka.sw.ericsson.se/cloudMgrGui/?</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="password" elementType="Argument">
              <stringProp name="Argument.name">password</stringProp>
              <stringProp name="Argument.value">PerfMaster123</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="vim_zone" elementType="Argument">
              <stringProp name="Argument.name">vim_zone</stringProp>
              <stringProp name="Argument.value">myVzIdx133</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="host" elementType="Argument">
              <stringProp name="Argument.name">host</stringProp>
              <stringProp name="Argument.value">ecm156x50.ete.ka.sw.ericsson.se</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="port" elementType="Argument">
              <stringProp name="Argument.name">port</stringProp>
              <stringProp name="Argument.value">8080</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ecm" elementType="Argument">
              <stringProp name="Argument.name">ecm</stringProp>
              <stringProp name="Argument.value">ecm156x50.ete.ka.sw.ericsson.se</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pg" elementType="Argument">
              <stringProp name="Argument.name">pg</stringProp>
              <stringProp name="Argument.value">ecm156x51.ete.ka.sw.ericsson.se</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="blade" elementType="Argument">
              <stringProp name="Argument.name">blade</stringProp>
              <stringProp name="Argument.value">sl210tx3298.ete.ka.sw.ericsson.se</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="x208" elementType="Argument">
              <stringProp name="Argument.name">x208</stringProp>
              <stringProp name="Argument.value">ecm154x208.ete.ka.sw.ericsson.se</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="results" elementType="Argument">
              <stringProp name="Argument.name">results</stringProp>
              <stringProp name="Argument.value">${__P(resultsFolder,/app/performance_production/jmeter/log)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="users" elementType="Argument">
              <stringProp name="Argument.name">users</stringProp>
              <stringProp name="Argument.value">${__P(users,1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="loops" elementType="Argument">
              <stringProp name="Argument.name">loops</stringProp>
              <stringProp name="Argument.value">${__P(loops,1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="rampup" elementType="Argument">
              <stringProp name="Argument.name">rampup</stringProp>
              <stringProp name="Argument.value">${__P(rampup,1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="dashboard_wait" elementType="Argument">
              <stringProp name="Argument.name">dashboard_wait</stringProp>
              <stringProp name="Argument.value">${__P(dashboard_wait,1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1 minute</stringProp>
            </elementProp>
            <elementProp name="wait1" elementType="Argument">
              <stringProp name="Argument.name">wait1</stringProp>
              <stringProp name="Argument.value">1000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1 minute wait</stringProp>
            </elementProp>
            <elementProp name="wait3" elementType="Argument">
              <stringProp name="Argument.name">wait3</stringProp>
              <stringProp name="Argument.value">3000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">3 second wait</stringProp>
            </elementProp>
            <elementProp name="wait5" elementType="Argument">
              <stringProp name="Argument.name">wait5</stringProp>
              <stringProp name="Argument.value">5000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="wait10" elementType="Argument">
              <stringProp name="Argument.name">wait10</stringProp>
              <stringProp name="Argument.value">10000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="wait25" elementType="Argument">
              <stringProp name="Argument.name">wait25</stringProp>
              <stringProp name="Argument.value">25000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="wait15" elementType="Argument">
              <stringProp name="Argument.name">wait15</stringProp>
              <stringProp name="Argument.value">15000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="wait120" elementType="Argument">
              <stringProp name="Argument.name">wait120</stringProp>
              <stringProp name="Argument.value">120000</stringProp>
              <stringProp name="Argument.desc">2 minutes wait</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="wait600" elementType="Argument">
              <stringProp name="Argument.name">wait600</stringProp>
              <stringProp name="Argument.value">600000</stringProp>
              <stringProp name="Argument.desc">600 seconds = 10 minutes</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ecm1" elementType="Argument">
              <stringProp name="Argument.name">ecm1</stringProp>
              <stringProp name="Argument.value">ecm156x50.ete.ka.sw.ericsson.se</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ecm_jboss_port" elementType="Argument">
              <stringProp name="Argument.name">ecm_jboss_port</stringProp>
              <stringProp name="Argument.value">12500</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pg1" elementType="Argument">
              <stringProp name="Argument.name">pg1</stringProp>
              <stringProp name="Argument.value">ecm156x51.ete.ka.sw.ericsson.se</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pg_dve_port" elementType="Argument">
              <stringProp name="Argument.name">pg_dve_port</stringProp>
              <stringProp name="Argument.value">7100</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pg_tomcat_port" elementType="Argument">
              <stringProp name="Argument.name">pg_tomcat_port</stringProp>
              <stringProp name="Argument.value">7101</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="dashboard_wait_25" elementType="Argument">
              <stringProp name="Argument.name">dashboard_wait_25</stringProp>
              <stringProp name="Argument.value">25000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
      </hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables x52" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="tenant" elementType="Argument">
            <stringProp name="Argument.name">tenant</stringProp>
            <stringProp name="Argument.value">perfTenant2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="user" elementType="Argument">
            <stringProp name="Argument.name">user</stringProp>
            <stringProp name="Argument.value">perfuser1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="password" elementType="Argument">
            <stringProp name="Argument.name">password</stringProp>
            <stringProp name="Argument.value">perfuser1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="vim_zone" elementType="Argument">
            <stringProp name="Argument.name">vim_zone</stringProp>
            <stringProp name="Argument.value">PerfOS</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">http://ecm156x52.ete.ka.sw.ericsson.se</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">8080</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - ecmadmin" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="website" elementType="Argument">
            <stringProp name="Argument.name">website</stringProp>
            <stringProp name="Argument.value">https://ecm156x50.ete.ka.sw.ericsson.se/openam/UI/Login?realm=/ECM&amp;goto=https%3A%2F%2Fecm156x50.ete.ka.sw.ericsson.se%2FcloudMgrGui%2F%3F%2FECM%2F%23launch</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="username" elementType="Argument">
            <stringProp name="Argument.name">username</stringProp>
            <stringProp name="Argument.value">ecmadmin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="password" elementType="Argument">
            <stringProp name="Argument.name">password</stringProp>
            <stringProp name="Argument.value">CloudAdmin123</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables x50" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="password" elementType="Argument">
            <stringProp name="Argument.name">password</stringProp>
            <stringProp name="Argument.value">PerfMaster123</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="vim_zone" elementType="Argument">
            <stringProp name="Argument.name">vim_zone</stringProp>
            <stringProp name="Argument.value">myVzIdx133</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">ecm156x50.ete.ka.sw.ericsson.se</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">8080</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ecm" elementType="Argument">
            <stringProp name="Argument.name">ecm</stringProp>
            <stringProp name="Argument.value">ecm156x50.ete.ka.sw.ericsson.se</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pg" elementType="Argument">
            <stringProp name="Argument.name">pg</stringProp>
            <stringProp name="Argument.value">ecm156x51.ete.ka.sw.ericsson.se</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="blade" elementType="Argument">
            <stringProp name="Argument.name">blade</stringProp>
            <stringProp name="Argument.value">sl210tx3298.ete.ka.sw.ericsson.se</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="default_results_folder" elementType="Argument">
            <stringProp name="Argument.name">default_results_folder</stringProp>
            <stringProp name="Argument.value">c:\temp\TESTDeleteMeResults</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="users_gui" elementType="Argument">
            <stringProp name="Argument.name">users_gui</stringProp>
            <stringProp name="Argument.value">11</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="loops_gui" elementType="Argument">
            <stringProp name="Argument.name">loops_gui</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rampup_gui" elementType="Argument">
            <stringProp name="Argument.name">rampup_gui</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sampling Thread Group" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${loops}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${users}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${rampup}</stringProp>
        <longProp name="ThreadGroup.start_time">1432651440000</longProp>
        <longProp name="ThreadGroup.end_time">1432651434000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">300</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">- 25 users would loop 48 times, ramp up time 125, 5 seconds between threads
  make sure the file is going from 0-8, 11
- 50 users would loop 24 times, ramp up time 250, 5 seconds between threads
  make sure the file is going from 0-8, 11
- 100 users would loop 12 times, ramp up time 500, 5 seconds between threads
  make sure the file is going from 0-8, 11
- 150 users would loop 8 times, ramp up time 750, 5 seconds between threads
  make sure the file is going from 0-8, 11
- 200 users would loop 6 times, ramp up time 1000, 5 seconds between threads
  make sure the file is going from 0-8, 11
- 300 users would loop 4 times, ramp up time 1500, 5 seconds between threads
  make sure the file is going from 0-8, 11</stringProp>
      </ThreadGroup>
      <hashTree>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.SynthesisReportGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="GUi Response Times - Synthetic" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">${__P(results,${default_results_folder})}/${__P(users,${users_gui})}/raw/synthesis.csv</stringProp>
          <longProp name="interval_grouping">500</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels">Setup.*</stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">true</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ThreadsStateOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="Active Threads Over Time" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">${__P(results,${default_results_folder})}/${__P(users,${users_gui})}/raw/threads.csv</stringProp>
          <longProp name="interval_grouping">500</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="CPU Metrics" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">${__P(results,${default_results_folder})}/${__P(users,${users_gui})}/raw/cpu.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="metricConnections">
            <collectionProp name="-1650928355">
              <stringProp name="-778709407">${ecm1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-831105697">
              <stringProp name="37021999">${pg1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="415151469">
              <stringProp name="-1281148164">${blade1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Memory Metrics" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">${__P(results,${default_results_folder})}/${__P(users,${users_gui})}/raw/mem.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="metricConnections">
            <collectionProp name="107928891">
              <stringProp name="1147350053">${ecm1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1306679055">
              <stringProp name="1147679738">${pg1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1885562852">
              <stringProp name="-1281148164">${blade1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Network Metrics (Rx)" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">${__P(results,${default_results_folder})}/${__P(users,${users_gui})}/raw/netrx.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="metricConnections">
            <collectionProp name="-804158091">
              <stringProp name="1147350053">${ecm1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network IO</stringProp>
              <stringProp name="-2032735023">bytesrecv</stringProp>
            </collectionProp>
            <collectionProp name="251060296">
              <stringProp name="37021999">${pg1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network IO</stringProp>
              <stringProp name="-2032735023">bytesrecv</stringProp>
            </collectionProp>
            <collectionProp name="1497317462">
              <stringProp name="-1281148164">${blade1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network IO</stringProp>
              <stringProp name="-2032735023">bytesrecv</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Network Metrics (Tx)" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">${__P(results,${default_results_folder})}/${__P(users,${users_gui})}/raw/nettx.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="metricConnections">
            <collectionProp name="-632009495">
              <stringProp name="1208111044">${ecm1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network IO</stringProp>
              <stringProp name="-2032704893">bytessent</stringProp>
            </collectionProp>
            <collectionProp name="147769813">
              <stringProp name="37021999">${pg1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network IO</stringProp>
              <stringProp name="-2032704893">bytessent</stringProp>
            </collectionProp>
            <collectionProp name="1394026979">
              <stringProp name="-1281148164">${blade1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network IO</stringProp>
              <stringProp name="-2032704893">bytessent</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Disk Metrics (Write)" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">${__P(results,${default_results_folder})}/${__P(users,${users_gui})}/raw/write.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="metricConnections">
            <collectionProp name="-1170408514">
              <stringProp name="1147350053">${ecm1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2112896831">Disks IO</stringProp>
              <stringProp name="-633177108">writebytes</stringProp>
            </collectionProp>
            <collectionProp name="-115190127">
              <stringProp name="37021999">${pg1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2112896831">Disks IO</stringProp>
              <stringProp name="-633177108">writebytes</stringProp>
            </collectionProp>
            <collectionProp name="1131067039">
              <stringProp name="-1281148164">${blade1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2112896831">Disks IO</stringProp>
              <stringProp name="-633177108">writebytes</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Disk Metrics (Read)" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">${__P(results,${default_results_folder})}/${__P(users,${users_gui})}/raw/read.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="metricConnections">
            <collectionProp name="490159258">
              <stringProp name="-778709407">${ecm1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2112896831">Disks IO</stringProp>
              <stringProp name="-1110510443">readbytes</stringProp>
            </collectionProp>
            <collectionProp name="1309981916">
              <stringProp name="37021999">${pg1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2112896831">Disks IO</stringProp>
              <stringProp name="-1110510443">readbytes</stringProp>
            </collectionProp>
            <collectionProp name="-1738728214">
              <stringProp name="-1281148164">${blade1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2112896831">Disks IO</stringProp>
              <stringProp name="-1110510443">readbytes</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.jmxmon.JMXMonCollector guiclass="kg.apc.jmeter.vizualizers.JMXMonGui" testclass="kg.apc.jmeter.jmxmon.JMXMonCollector" testname="JBOSS JMX" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>false</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>false</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
            </value>
          </objProp>
          <stringProp name="filename">${__P(results,${default_results_folder})}/${__P(users,${users_gui})}/raw/ecmjmx.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="samplers">
            <collectionProp name="-509347637">
              <stringProp name="563092484">${ecm1} jboss threads</stringProp>
              <stringProp name="904974450">service:jmx:remoting-jmx://${ecm1}:${ecm_jboss_port}</stringProp>
              <stringProp name="92668751">admin</stringProp>
              <stringProp name="-904532845">Admin!23</stringProp>
              <stringProp name="1641949653">java.lang:type=Threading</stringProp>
              <stringProp name="-158340056">ThreadCount</stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="1237">false</stringProp>
              <stringProp name="1237">false</stringProp>
            </collectionProp>
            <collectionProp name="120962311">
              <stringProp name="-2117641786">${ecm1} jboss heap alloc</stringProp>
              <stringProp name="904974450">service:jmx:remoting-jmx://${ecm1}:${ecm_jboss_port}</stringProp>
              <stringProp name="92668751">admin</stringProp>
              <stringProp name="-904532845">Admin!23</stringProp>
              <stringProp name="-1508861468">java.lang:type=Memory</stringProp>
              <stringProp name="-687755404">HeapMemoryUsage</stringProp>
              <stringProp name="3599293">used</stringProp>
              <stringProp name="1237">false</stringProp>
              <stringProp name="1237">false</stringProp>
            </collectionProp>
            <collectionProp name="1354592162">
              <stringProp name="1692026860">${ecm1} jboss gc time</stringProp>
              <stringProp name="904974450">service:jmx:remoting-jmx://${ecm1}:${ecm_jboss_port}</stringProp>
              <stringProp name="92668751">admin</stringProp>
              <stringProp name="-904532845">Admin!23</stringProp>
              <stringProp name="-1658040391">java.lang:type=GarbageCollector,name=PS MarkSweep</stringProp>
              <stringProp name="-691027285">CollectionTime</stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="1231">true</stringProp>
              <stringProp name="1237">false</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="ResultCollector.success_only_logging">true</boolProp>
        </kg.apc.jmeter.jmxmon.JMXMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="PG JMX " enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">${__P(results,${default_results_folder})}/${__P(users,${users_gui})}/raw/pgjmx.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="metricConnections">
            <collectionProp name="252046374">
              <stringProp name="-1187101997">${pg1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="73589">JMX</stringProp>
              <stringProp name="1708554785">url=localhost\:${pg_dve_port}:label=dve heap:unit=mb:memory-usage</stringProp>
            </collectionProp>
            <collectionProp name="1830016561">
              <stringProp name="-1187101997">${pg1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="73589">JMX</stringProp>
              <stringProp name="1492708167">url=localhost\:${pg_tomcat_port}:label=tomcat heap:unit=mb:memory-usage</stringProp>
            </collectionProp>
            <collectionProp name="-966773025">
              <stringProp name="-1187101997">${pg1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="73589">JMX</stringProp>
              <stringProp name="-873658597">url=localhost\:${pg_dve_port}:label=dve GC  Time:gc-time</stringProp>
            </collectionProp>
            <collectionProp name="-30277547">
              <stringProp name="-1187101997">${pg1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="73589">JMX</stringProp>
              <stringProp name="760285069">url=localhost\:${pg_tomcat_port}:label=tomcat GC Time:gc-time</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="ResultCollector.success_only_logging">true</boolProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <ericsson.jmeter.ecm.controller.EcmTestAppController guiclass="ericsson.jmeter.ecm.controller.EcmTestAppControllerGui" testclass="ericsson.jmeter.ecm.controller.EcmTestAppController" testname="ECM Sampling Controller" enabled="false"/>
        <hashTree>
          <ericsson.jmeter.ecm.sampler.EcmApplicationSampler guiclass="ericsson.jmeter.ecm.sampler.EcmApplicationSamplerGui" testclass="ericsson.jmeter.ecm.sampler.EcmApplicationSampler" testname="NTT US1 Sampler" enabled="false">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenantNameFormat" elementType="Argument">
                  <stringProp name="Argument.name">tenantNameFormat</stringProp>
                  <stringProp name="Argument.value">${__P(tenantNameFormat,perfTenant:4:0:1:9)}</stringProp>
                  <stringProp name="Argument.desc">Tenant name used for initial login</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userNameFormat" elementType="Argument">
                  <stringProp name="Argument.name">userNameFormat</stringProp>
                  <stringProp name="Argument.value">${__P(userNameFormat,perfuser:0:1:1:36)}</stringProp>
                  <stringProp name="Argument.desc">Tenant name used for initial login</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="threads" elementType="Argument">
                  <stringProp name="Argument.name">threads</stringProp>
                  <stringProp name="Argument.value">${users}</stringProp>
                  <stringProp name="Argument.desc">Maximum thread count the test will run in.</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Argument">
                  <stringProp name="Argument.name">host</stringProp>
                  <stringProp name="Argument.value">${host}</stringProp>
                  <stringProp name="Argument.desc">Ecm host name</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="port" elementType="Argument">
                  <stringProp name="Argument.name">port</stringProp>
                  <stringProp name="Argument.value">443</stringProp>
                  <stringProp name="Argument.desc">IP port used for ECM APIs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="protocol" elementType="Argument">
                  <stringProp name="Argument.name">protocol</stringProp>
                  <stringProp name="Argument.value">https</stringProp>
                  <stringProp name="Argument.desc">Protocol used to connect the server. Valid values are http and https.</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="loginTenant" elementType="Argument">
                  <stringProp name="Argument.name">loginTenant</stringProp>
                  <stringProp name="Argument.value">${tenant}</stringProp>
                  <stringProp name="Argument.desc">Tenant name used for initial login</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userName" elementType="Argument">
                  <stringProp name="Argument.name">userName</stringProp>
                  <stringProp name="Argument.value">${user}</stringProp>
                  <stringProp name="Argument.desc">Tenant&apos;s user name</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="password" elementType="Argument">
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="Argument.value">${password}</stringProp>
                  <stringProp name="Argument.desc">Tenant&apos;s password</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="getOrderListLoopCount" elementType="Argument">
                  <stringProp name="Argument.name">getOrderListLoopCount</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.desc">Loop count, 0 to skip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="getVdcListLoopCount" elementType="Argument">
                  <stringProp name="Argument.name">getVdcListLoopCount</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.desc">Loop count, 0 to skip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="getVdcDetailsLoopCount" elementType="Argument">
                  <stringProp name="Argument.name">getVdcDetailsLoopCount</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.desc">Loop count, 0 to skip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="getVappListLoopCount" elementType="Argument">
                  <stringProp name="Argument.name">getVappListLoopCount</stringProp>
                  <stringProp name="Argument.value">6</stringProp>
                  <stringProp name="Argument.desc">Loop count, 0 to skip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="getVnListLoopCount" elementType="Argument">
                  <stringProp name="Argument.name">getVnListLoopCount</stringProp>
                  <stringProp name="Argument.value">6</stringProp>
                  <stringProp name="Argument.desc">Loop count, 0 to skip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="getVmListLoopCount" elementType="Argument">
                  <stringProp name="Argument.name">getVmListLoopCount</stringProp>
                  <stringProp name="Argument.value">9</stringProp>
                  <stringProp name="Argument.desc">Loop count, 0 to skip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="getVmDetailLoopCount" elementType="Argument">
                  <stringProp name="Argument.name">getVmDetailLoopCount</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.desc">Loop count, 0 to skip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.ericsson.ecm.performance.applications.NTTUS1TestPlanEx</stringProp>
          </ericsson.jmeter.ecm.sampler.EcmApplicationSampler>
          <hashTree>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">true</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>false</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>false</message>
                  <threadName>false</threadName>
                  <dataType>false</dataType>
                  <encoding>false</encoding>
                  <assertions>false</assertions>
                  <subresults>false</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <threadCounts>true</threadCounts>
                  <sampleCount>true</sampleCount>
                  <idleTime>true</idleTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sampling Thread Group" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${loops}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${users}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${rampup}</stringProp>
        <longProp name="ThreadGroup.start_time">1432651440000</longProp>
        <longProp name="ThreadGroup.end_time">1432651434000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">300</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">- 25 users would loop 48 times, ramp up time 125, 5 seconds between threads
  make sure the file is going from 0-8, 11
- 50 users would loop 24 times, ramp up time 250, 5 seconds between threads
  make sure the file is going from 0-8, 11
- 100 users would loop 12 times, ramp up time 500, 5 seconds between threads
  make sure the file is going from 0-8, 11
- 150 users would loop 8 times, ramp up time 750, 5 seconds between threads
  make sure the file is going from 0-8, 11
- 200 users would loop 6 times, ramp up time 1000, 5 seconds between threads
  make sure the file is going from 0-8, 11
- 300 users would loop 4 times, ramp up time 1500, 5 seconds between threads
  make sure the file is going from 0-8, 11</stringProp>
      </ThreadGroup>
      <hashTree>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.SynthesisReportGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="API Response Times - Synthetic" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">${results}/NTTUS1/${users}/raw/synthesis.csv</stringProp>
          <longProp name="interval_grouping">500</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels">Setup.*</stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">true</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ThreadsStateOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="Active Threads Over Time" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">${results}/NTTUS1/${users}/raw/threads.csv</stringProp>
          <longProp name="interval_grouping">500</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="CPU Metrics" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">${results}/NTTUS1/${users}/raw/cpu.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="metricConnections">
            <collectionProp name="-1650928355">
              <stringProp name="-778709407">${ecm1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-831105697">
              <stringProp name="37021999">${pg1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="415151469">
              <stringProp name="-1281148164">${blade1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Memory Metrics" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">${results}/NTTUS1/${users}/raw/mem.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="metricConnections">
            <collectionProp name="107928891">
              <stringProp name="1147350053">${ecm1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1306679055">
              <stringProp name="1147679738">${pg1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1885562852">
              <stringProp name="-1281148164">${blade1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Network Metrics (Rx)" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">${results}/NTTUS1/${users}/raw/netrx.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="metricConnections">
            <collectionProp name="-804158091">
              <stringProp name="1147350053">${ecm1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network IO</stringProp>
              <stringProp name="-2032735023">bytesrecv</stringProp>
            </collectionProp>
            <collectionProp name="251060296">
              <stringProp name="37021999">${pg1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network IO</stringProp>
              <stringProp name="-2032735023">bytesrecv</stringProp>
            </collectionProp>
            <collectionProp name="1497317462">
              <stringProp name="-1281148164">${blade1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network IO</stringProp>
              <stringProp name="-2032735023">bytesrecv</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Network Metrics (Tx)" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">${results}/NTTUS1/${users}/raw/nettx.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="metricConnections">
            <collectionProp name="-632009495">
              <stringProp name="1208111044">${ecm1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network IO</stringProp>
              <stringProp name="-2032704893">bytessent</stringProp>
            </collectionProp>
            <collectionProp name="147769813">
              <stringProp name="37021999">${pg1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network IO</stringProp>
              <stringProp name="-2032704893">bytessent</stringProp>
            </collectionProp>
            <collectionProp name="1394026979">
              <stringProp name="-1281148164">${blade1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network IO</stringProp>
              <stringProp name="-2032704893">bytessent</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Disk Metrics (Write)" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">${results}/NTTUS1/${users}/raw/write.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="metricConnections">
            <collectionProp name="-1170408514">
              <stringProp name="1147350053">${ecm1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2112896831">Disks IO</stringProp>
              <stringProp name="-633177108">writebytes</stringProp>
            </collectionProp>
            <collectionProp name="-115190127">
              <stringProp name="37021999">${pg1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2112896831">Disks IO</stringProp>
              <stringProp name="-633177108">writebytes</stringProp>
            </collectionProp>
            <collectionProp name="1131067039">
              <stringProp name="-1281148164">${blade1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2112896831">Disks IO</stringProp>
              <stringProp name="-633177108">writebytes</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Disk Metrics (Read)" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">${results}/NTTUS1/${users}/raw/read.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="metricConnections">
            <collectionProp name="490159258">
              <stringProp name="-778709407">${ecm1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2112896831">Disks IO</stringProp>
              <stringProp name="-1110510443">readbytes</stringProp>
            </collectionProp>
            <collectionProp name="1309981916">
              <stringProp name="37021999">${pg1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2112896831">Disks IO</stringProp>
              <stringProp name="-1110510443">readbytes</stringProp>
            </collectionProp>
            <collectionProp name="-1738728214">
              <stringProp name="-1281148164">${blade1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2112896831">Disks IO</stringProp>
              <stringProp name="-1110510443">readbytes</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.jmxmon.JMXMonCollector guiclass="kg.apc.jmeter.vizualizers.JMXMonGui" testclass="kg.apc.jmeter.jmxmon.JMXMonCollector" testname="JBOSS JMX" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>false</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>false</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
            </value>
          </objProp>
          <stringProp name="filename">${results}/NTTUS1/${users}/raw/ecmjmx.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="samplers">
            <collectionProp name="-509347637">
              <stringProp name="563092484">${ecm1} jboss threads</stringProp>
              <stringProp name="904974450">service:jmx:remoting-jmx://${ecm1}:${ecm_jboss_port}</stringProp>
              <stringProp name="92668751">admin</stringProp>
              <stringProp name="-904532845">Admin!23</stringProp>
              <stringProp name="1641949653">java.lang:type=Threading</stringProp>
              <stringProp name="-158340056">ThreadCount</stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="1237">false</stringProp>
              <stringProp name="1237">false</stringProp>
            </collectionProp>
            <collectionProp name="120962311">
              <stringProp name="-2117641786">${ecm1} jboss heap alloc</stringProp>
              <stringProp name="904974450">service:jmx:remoting-jmx://${ecm1}:${ecm_jboss_port}</stringProp>
              <stringProp name="92668751">admin</stringProp>
              <stringProp name="-904532845">Admin!23</stringProp>
              <stringProp name="-1508861468">java.lang:type=Memory</stringProp>
              <stringProp name="-687755404">HeapMemoryUsage</stringProp>
              <stringProp name="3599293">used</stringProp>
              <stringProp name="1237">false</stringProp>
              <stringProp name="1237">false</stringProp>
            </collectionProp>
            <collectionProp name="1354592162">
              <stringProp name="1692026860">${ecm1} jboss gc time</stringProp>
              <stringProp name="904974450">service:jmx:remoting-jmx://${ecm1}:${ecm_jboss_port}</stringProp>
              <stringProp name="92668751">admin</stringProp>
              <stringProp name="-904532845">Admin!23</stringProp>
              <stringProp name="-1658040391">java.lang:type=GarbageCollector,name=PS MarkSweep</stringProp>
              <stringProp name="-691027285">CollectionTime</stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="1231">true</stringProp>
              <stringProp name="1237">false</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="ResultCollector.success_only_logging">true</boolProp>
        </kg.apc.jmeter.jmxmon.JMXMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="PG JMX " enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">${results}/NTTUS1/${users}/raw/pgjmx.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="metricConnections">
            <collectionProp name="252046374">
              <stringProp name="-1187101997">${pg1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="73589">JMX</stringProp>
              <stringProp name="1708554785">url=localhost\:${pg_dve_port}:label=dve heap:unit=mb:memory-usage</stringProp>
            </collectionProp>
            <collectionProp name="1830016561">
              <stringProp name="-1187101997">${pg1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="73589">JMX</stringProp>
              <stringProp name="1492708167">url=localhost\:${pg_tomcat_port}:label=tomcat heap:unit=mb:memory-usage</stringProp>
            </collectionProp>
            <collectionProp name="-966773025">
              <stringProp name="-1187101997">${pg1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="73589">JMX</stringProp>
              <stringProp name="-873658597">url=localhost\:${pg_dve_port}:label=dve GC  Time:gc-time</stringProp>
            </collectionProp>
            <collectionProp name="-30277547">
              <stringProp name="-1187101997">${pg1}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="73589">JMX</stringProp>
              <stringProp name="760285069">url=localhost\:${pg_tomcat_port}:label=tomcat GC Time:gc-time</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="ResultCollector.success_only_logging">true</boolProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <ericsson.jmeter.ecm.controller.EcmTestAppController guiclass="ericsson.jmeter.ecm.controller.EcmTestAppControllerGui" testclass="ericsson.jmeter.ecm.controller.EcmTestAppController" testname="ECM Sampling Controller" enabled="true"/>
        <hashTree>
          <ericsson.jmeter.ecm.sampler.EcmApplicationSampler guiclass="ericsson.jmeter.ecm.sampler.EcmApplicationSamplerGui" testclass="ericsson.jmeter.ecm.sampler.EcmApplicationSampler" testname="NTT US1 Sampler" enabled="true">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tenantNameFormat" elementType="Argument">
                  <stringProp name="Argument.name">tenantNameFormat</stringProp>
                  <stringProp name="Argument.value">${__P(tenantNameFormat,perfTenant:4:0:1:9)}</stringProp>
                  <stringProp name="Argument.desc">Tenant name used for initial login</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userNameFormat" elementType="Argument">
                  <stringProp name="Argument.name">userNameFormat</stringProp>
                  <stringProp name="Argument.value">${__P(userNameFormat,perfuser:0:1:1:36)}</stringProp>
                  <stringProp name="Argument.desc">Tenant name used for initial login</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="threads" elementType="Argument">
                  <stringProp name="Argument.name">threads</stringProp>
                  <stringProp name="Argument.value">${users}</stringProp>
                  <stringProp name="Argument.desc">Maximum thread count the test will run in.</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="host" elementType="Argument">
                  <stringProp name="Argument.name">host</stringProp>
                  <stringProp name="Argument.value">${host}</stringProp>
                  <stringProp name="Argument.desc">Ecm host name</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="port" elementType="Argument">
                  <stringProp name="Argument.name">port</stringProp>
                  <stringProp name="Argument.value">443</stringProp>
                  <stringProp name="Argument.desc">IP port used for ECM APIs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="protocol" elementType="Argument">
                  <stringProp name="Argument.name">protocol</stringProp>
                  <stringProp name="Argument.value">https</stringProp>
                  <stringProp name="Argument.desc">Protocol used to connect the server. Valid values are http and https.</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="loginTenant" elementType="Argument">
                  <stringProp name="Argument.name">loginTenant</stringProp>
                  <stringProp name="Argument.value">${tenant}</stringProp>
                  <stringProp name="Argument.desc">Tenant name used for initial login</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userName" elementType="Argument">
                  <stringProp name="Argument.name">userName</stringProp>
                  <stringProp name="Argument.value">${user}</stringProp>
                  <stringProp name="Argument.desc">Tenant&apos;s user name</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="password" elementType="Argument">
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="Argument.value">${password}</stringProp>
                  <stringProp name="Argument.desc">Tenant&apos;s password</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="getOrderListLoopCount" elementType="Argument">
                  <stringProp name="Argument.name">getOrderListLoopCount</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.desc">Loop count, 0 to skip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="getVdcListLoopCount" elementType="Argument">
                  <stringProp name="Argument.name">getVdcListLoopCount</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.desc">Loop count, 0 to skip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="getVdcDetailsLoopCount" elementType="Argument">
                  <stringProp name="Argument.name">getVdcDetailsLoopCount</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.desc">Loop count, 0 to skip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="getVappListLoopCount" elementType="Argument">
                  <stringProp name="Argument.name">getVappListLoopCount</stringProp>
                  <stringProp name="Argument.value">6</stringProp>
                  <stringProp name="Argument.desc">Loop count, 0 to skip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="getVnListLoopCount" elementType="Argument">
                  <stringProp name="Argument.name">getVnListLoopCount</stringProp>
                  <stringProp name="Argument.value">6</stringProp>
                  <stringProp name="Argument.desc">Loop count, 0 to skip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="getVmListLoopCount" elementType="Argument">
                  <stringProp name="Argument.name">getVmListLoopCount</stringProp>
                  <stringProp name="Argument.value">9</stringProp>
                  <stringProp name="Argument.desc">Loop count, 0 to skip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="getVmDetailLoopCount" elementType="Argument">
                  <stringProp name="Argument.name">getVmDetailLoopCount</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.desc">Loop count, 0 to skip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.ericsson.ecm.performance.applications.NTTUS1TestPlanEx</stringProp>
          </ericsson.jmeter.ecm.sampler.EcmApplicationSampler>
          <hashTree>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">true</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>false</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>false</message>
                  <threadName>false</threadName>
                  <dataType>false</dataType>
                  <encoding>false</encoding>
                  <assertions>false</assertions>
                  <subresults>false</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <threadCounts>true</threadCounts>
                  <sampleCount>true</sampleCount>
                  <idleTime>true</idleTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Query Thread Group" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${__P(loops,${loops_gui})}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(users,${users_gui})}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(rampup,${rampup_gui})}</stringProp>
        <longProp name="ThreadGroup.start_time">1432651440000</longProp>
        <longProp name="ThreadGroup.end_time">1432651434000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">300</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">- 25 users would loop 48 times, ramp up time 125, 5 seconds between threads
  make sure the file is going from 0-8, 11
- 50 users would loop 24 times, ramp up time 250, 5 seconds between threads
  make sure the file is going from 0-8, 11
- 100 users would loop 12 times, ramp up time 500, 5 seconds between threads
  make sure the file is going from 0-8, 11
- 150 users would loop 8 times, ramp up time 750, 5 seconds between threads
  make sure the file is going from 0-8, 11
- 200 users would loop 6 times, ramp up time 1000, 5 seconds between threads
  make sure the file is going from 0-8, 11
- 300 users would loop 4 times, ramp up time 1500, 5 seconds between threads
  make sure the file is going from 0-8, 11</stringProp>
      </ThreadGroup>
      <hashTree>
        <ericsson.jmeter.ecm.controller.EcmTestAppController guiclass="ericsson.jmeter.ecm.controller.EcmTestAppControllerGui" testclass="ericsson.jmeter.ecm.controller.EcmTestAppController" testname="Controller" enabled="true"/>
        <hashTree>
          <ericsson.jmeter.ecm.sampler.EcmApplicationSampler guiclass="ericsson.jmeter.ecm.sampler.EcmApplicationSamplerGui" testclass="ericsson.jmeter.ecm.sampler.EcmApplicationSampler" testname="LoginLogout Sampler" enabled="true">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="host" elementType="Argument">
                  <stringProp name="Argument.name">host</stringProp>
                  <stringProp name="Argument.value">${host}</stringProp>
                  <stringProp name="Argument.desc">Ecm host name</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="port" elementType="Argument">
                  <stringProp name="Argument.name">port</stringProp>
                  <stringProp name="Argument.value">443</stringProp>
                  <stringProp name="Argument.desc">IP port used for ECM APIs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="protocol" elementType="Argument">
                  <stringProp name="Argument.name">protocol</stringProp>
                  <stringProp name="Argument.value">https</stringProp>
                  <stringProp name="Argument.desc">Protocol used to connect the server. Valid values are http and https.</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="loginTenant" elementType="Argument">
                  <stringProp name="Argument.name">loginTenant</stringProp>
                  <stringProp name="Argument.value">${tenant}</stringProp>
                  <stringProp name="Argument.desc">Tenant name used for initial login</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userName" elementType="Argument">
                  <stringProp name="Argument.name">userName</stringProp>
                  <stringProp name="Argument.value">${user}</stringProp>
                  <stringProp name="Argument.desc">Tenant&apos;s user name</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="password" elementType="Argument">
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="Argument.value">${password}</stringProp>
                  <stringProp name="Argument.desc">Tenant&apos;s password</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="loopCount" elementType="Argument">
                  <stringProp name="Argument.name">loopCount</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.desc">Loop count</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.ericsson.ecm.performance.applications.LoginLogOutTest</stringProp>
          </ericsson.jmeter.ecm.sampler.EcmApplicationSampler>
          <hashTree>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">true</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">C:\Performance\Results\15.1\50Users\agg.csv</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.SynthesisReportGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Synthesis Report (filtered)" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">${__P(results,${default_results_folder})}\\${__P(users,${users_gui})}\\raw\\synthesis.csv</stringProp>
          <longProp name="interval_grouping">500</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels">Setup.*</stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">true</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ThreadsStateOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Active Threads Over Time" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>false</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>false</success>
              <label>false</label>
              <code>false</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename">${__P(results,${default_results_folder})}\\${__P(users,${users_gui})}\\raw\\threads.csv</stringProp>
          <longProp name="interval_grouping">500</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="jp@gc - PerfMon System Metrics Collector CPU" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>false</success>
              <label>true</label>
              <code>false</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename">${__P(results,${default_results_folder})}\\${__P(users,${users_gui})}\\raw\\cpu.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="metricConnections">
            <collectionProp name="459191947">
              <stringProp name="1147350053">${ecm}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-7759862">
              <stringProp name="37021999">${pg}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="1403818974">
              <stringProp name="-1281148164">${blade}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="jp@gc - PerfMon System Metrics Collector Disk IO Read" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>false</success>
              <label>true</label>
              <code>false</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename">${__P(results,${default_results_folder})}\\${__P(users,${users_gui})}\\raw\\read.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="metricConnections">
            <collectionProp name="1562674137">
              <stringProp name="1147350053">${ecm}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2112896831">Disks I/O</stringProp>
              <stringProp name="-1110510443">readbytes</stringProp>
            </collectionProp>
            <collectionProp name="1095722328">
              <stringProp name="37021999">${pg}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2112896831">Disks I/O</stringProp>
              <stringProp name="-1110510443">readbytes</stringProp>
            </collectionProp>
            <collectionProp name="-1787666132">
              <stringProp name="-1281148164">${blade}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2112896831">Disks I/O</stringProp>
              <stringProp name="-1110510443">readbytes</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="jp@gc - PerfMon System Metrics Collector Disk IO Write" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>false</success>
              <label>true</label>
              <code>false</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename">${__P(results,${default_results_folder})}\\${__P(users,${users_gui})}\\raw\\write.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="metricConnections">
            <collectionProp name="137502094">
              <stringProp name="1147350053">${ecm}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2112896831">Disks I/O</stringProp>
              <stringProp name="-633177108">writebytes</stringProp>
            </collectionProp>
            <collectionProp name="-329449715">
              <stringProp name="37021999">${pg}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2112896831">Disks I/O</stringProp>
              <stringProp name="-633177108">writebytes</stringProp>
            </collectionProp>
            <collectionProp name="1082129121">
              <stringProp name="-1281148164">${blade}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2112896831">Disks I/O</stringProp>
              <stringProp name="-633177108">writebytes</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="jp@gc - PerfMon System Metrics Collector Network IO TX" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>false</success>
              <label>true</label>
              <code>false</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename">${__P(results,${default_results_folder})}\\${__P(users,${users_gui})}\\raw\\nettx.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="metricConnections">
            <collectionProp name="1797736546">
              <stringProp name="1147350053">${ecm}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="-2032704893">bytessent</stringProp>
            </collectionProp>
            <collectionProp name="1330784737">
              <stringProp name="37021999">${pg}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="-2032704893">bytessent</stringProp>
            </collectionProp>
            <collectionProp name="-1552603723">
              <stringProp name="-1281148164">${blade}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="-2032704893">bytessent</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="jp@gc - PerfMon System Metrics Collector Network IO RX" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>false</success>
              <label>true</label>
              <code>false</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename">${__P(results,${default_results_folder})}\\${__P(users,${users_gui})}\\raw\\netrx.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="metricConnections">
            <collectionProp name="1901027029">
              <stringProp name="1147350053">${ecm}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="-2032735023">bytesrecv</stringProp>
            </collectionProp>
            <collectionProp name="1434075220">
              <stringProp name="37021999">${pg}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="-2032735023">bytesrecv</stringProp>
            </collectionProp>
            <collectionProp name="-1449313240">
              <stringProp name="-1281148164">${blade}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="-2032735023">bytesrecv</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="jp@gc - PerfMon System Metrics Collector Memory" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>false</success>
              <label>true</label>
              <code>false</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename">${__P(results,${default_results_folder})}\\${__P(users,${users_gui})}\\raw\\mem.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="metricConnections">
            <collectionProp name="-1841522374">
              <stringProp name="1147350053">${ecm}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="1986493113">
              <stringProp name="37021999">${pg}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-896895347">
              <stringProp name="-1281148164">${blade}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="jp@gc - PerfMon JVM Memory Usage Collector" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>false</success>
              <label>true</label>
              <code>false</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename">${__P(results,${default_results_folder})}\\${__P(users,${users_gui})}\\raw\\jmem.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="metricConnections">
            <collectionProp name="-538884485">
              <stringProp name="1147350053">${ecm}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="73589">JMX</stringProp>
              <stringProp name="1879911410">url=${ecm}\:9100:label=jboss:memory-usage</stringProp>
            </collectionProp>
            <collectionProp name="118799962">
              <stringProp name="37021999">${pg}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="-396241083">url=${pg}\:7100:label=glassFish:memory-usage</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="jp@gc - PerfMon JVM GC Time Collector" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>false</latency>
              <timestamp>true</timestamp>
              <success>false</success>
              <label>true</label>
              <code>false</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename">${__P(results,${default_results_folder})}\\${__P(users,${users_gui})}\\raw\\jgc.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="metricConnections">
            <collectionProp name="1039673326">
              <stringProp name="1147350053">${ecm}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="73589">JMX</stringProp>
              <stringProp name="-1739255583">url=${ecm}\:9100:label=jboss:gc-time</stringProp>
            </collectionProp>
            <collectionProp name="1468855387">
              <stringProp name="37021999">${pg}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="73589">JMX</stringProp>
              <stringProp name="-2006606450">url=${pg}\:7100:label=GlassFish:gc-time</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.jmxmon.JMXMonCollector guiclass="kg.apc.jmeter.vizualizers.JMXMonGui" testclass="kg.apc.jmeter.jmxmon.JMXMonCollector" testname="jp@gc - Partial JMXMon Samples Collector" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">${__P(results,${default_results_folder})}\\${__P(users,${users_gui})}\\raw\\jmx.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="samplers">
            <collectionProp name="176119803">
              <stringProp name="1517315231">Jboss CPU</stringProp>
              <stringProp name="1173022736">service:jmx:remoting-jmx://${ecm}:9999</stringProp>
              <stringProp name="92668751">admin</stringProp>
              <stringProp name="-904532845">Admin!23</stringProp>
              <stringProp name="1418096973">java.lang:type=OperatingSystem</stringProp>
              <stringProp name="-101473953">ProcessCpuLoad</stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="1237">false</stringProp>
              <stringProp name="1237">false</stringProp>
            </collectionProp>
            <collectionProp name="110141262">
              <stringProp name="-1800330802">Core VM Open File Descriptors</stringProp>
              <stringProp name="1173022736">service:jmx:remoting-jmx://${ecm}:9999</stringProp>
              <stringProp name="92668751">admin</stringProp>
              <stringProp name="-904532845">Admin!23</stringProp>
              <stringProp name="1418096973">java.lang:type=OperatingSystem</stringProp>
              <stringProp name="1641916154">OpenFileDescriptorCount</stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="1237">false</stringProp>
              <stringProp name="1237">false</stringProp>
            </collectionProp>
            <collectionProp name="1458588684">
              <stringProp name="-1314106814">Jboss Thread Count</stringProp>
              <stringProp name="1173022736">service:jmx:remoting-jmx://${ecm}:9999</stringProp>
              <stringProp name="92668751">admin</stringProp>
              <stringProp name="-904532845">Admin!23</stringProp>
              <stringProp name="1641949653">java.lang:type=Threading</stringProp>
              <stringProp name="-158340056">ThreadCount</stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="1237">false</stringProp>
              <stringProp name="1237">false</stringProp>
            </collectionProp>
            <collectionProp name="-498234492">
              <stringProp name="-1878388069">Jboss Garbage Collection Time</stringProp>
              <stringProp name="1173022736">service:jmx:remoting-jmx://${ecm}:9999</stringProp>
              <stringProp name="92668751">admin</stringProp>
              <stringProp name="-904532845">Admin!23</stringProp>
              <stringProp name="-1099049176">java.lang:type=GarbageCollector,name=PS Scavenge</stringProp>
              <stringProp name="-691027285">CollectionTime</stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="1231">true</stringProp>
              <stringProp name="1237">false</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.jmxmon.JMXMonCollector>
        <hashTree/>
        <kg.apc.jmeter.jmxmon.JMXMonCollector guiclass="kg.apc.jmeter.vizualizers.JMXMonGui" testclass="kg.apc.jmeter.jmxmon.JMXMonCollector" testname="jp@gc - JMXMon Samples Collector" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">${__P(results,${default_results_folder})}\\${__P(users,${users_gui})}\\raw\\jmx.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="samplers">
            <collectionProp name="176119803">
              <stringProp name="1517315231">Jboss CPU</stringProp>
              <stringProp name="1173022736">service:jmx:remoting-jmx://${ecm}:9999</stringProp>
              <stringProp name="92668751">admin</stringProp>
              <stringProp name="-904532845">Admin!23</stringProp>
              <stringProp name="1418096973">java.lang:type=OperatingSystem</stringProp>
              <stringProp name="-101473953">ProcessCpuLoad</stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="1237">false</stringProp>
              <stringProp name="1237">false</stringProp>
            </collectionProp>
            <collectionProp name="-778196348">
              <stringProp name="433571872">Core VM CPU</stringProp>
              <stringProp name="1173022736">service:jmx:remoting-jmx://${ecm}:9999</stringProp>
              <stringProp name="92668751">admin</stringProp>
              <stringProp name="-904532845">Admin!23</stringProp>
              <stringProp name="1418096973">java.lang:type=OperatingSystem</stringProp>
              <stringProp name="-481625761">SystemCpuLoad</stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="1237">false</stringProp>
              <stringProp name="1237">false</stringProp>
            </collectionProp>
            <collectionProp name="110141262">
              <stringProp name="-1800330802">Core VM Open File Descriptors</stringProp>
              <stringProp name="1173022736">service:jmx:remoting-jmx://${ecm}:9999</stringProp>
              <stringProp name="92668751">admin</stringProp>
              <stringProp name="-904532845">Admin!23</stringProp>
              <stringProp name="1418096973">java.lang:type=OperatingSystem</stringProp>
              <stringProp name="1641916154">OpenFileDescriptorCount</stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="1237">false</stringProp>
              <stringProp name="1237">false</stringProp>
            </collectionProp>
            <collectionProp name="1458588684">
              <stringProp name="-1314106814">Jboss Thread Count</stringProp>
              <stringProp name="1173022736">service:jmx:remoting-jmx://${ecm}:9999</stringProp>
              <stringProp name="92668751">admin</stringProp>
              <stringProp name="-904532845">Admin!23</stringProp>
              <stringProp name="1641949653">java.lang:type=Threading</stringProp>
              <stringProp name="-158340056">ThreadCount</stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="1237">false</stringProp>
              <stringProp name="1237">false</stringProp>
            </collectionProp>
            <collectionProp name="1160359326">
              <stringProp name="-1587275219">Jboss Heap Memory Usage</stringProp>
              <stringProp name="1173022736">service:jmx:remoting-jmx://${ecm}:9999</stringProp>
              <stringProp name="92668751">admin</stringProp>
              <stringProp name="-904532845">Admin!23</stringProp>
              <stringProp name="-1508861468">java.lang:type=Memory</stringProp>
              <stringProp name="-687755404">HeapMemoryUsage</stringProp>
              <stringProp name="3599293">used</stringProp>
              <stringProp name="1237">false</stringProp>
              <stringProp name="1237">false</stringProp>
            </collectionProp>
            <collectionProp name="1125305103">
              <stringProp name="-1487057069">Jboss Heap Memory Allocated</stringProp>
              <stringProp name="1173022736">service:jmx:remoting-jmx://${ecm}:9999</stringProp>
              <stringProp name="92668751">admin</stringProp>
              <stringProp name="-904532845">Admin!23</stringProp>
              <stringProp name="-1508861468">java.lang:type=Memory</stringProp>
              <stringProp name="-687755404">HeapMemoryUsage</stringProp>
              <stringProp name="-1491142788">committed</stringProp>
              <stringProp name="1237">false</stringProp>
              <stringProp name="1237">false</stringProp>
            </collectionProp>
            <collectionProp name="1942954334">
              <stringProp name="-457649684">Jboss Heap Memory Allocated (Delta)</stringProp>
              <stringProp name="1173022736">service:jmx:remoting-jmx://${ecm}:9999</stringProp>
              <stringProp name="92668751">admin</stringProp>
              <stringProp name="-904532845">Admin!23</stringProp>
              <stringProp name="-1508861468">java.lang:type=Memory</stringProp>
              <stringProp name="-687755404">HeapMemoryUsage</stringProp>
              <stringProp name="-1491142788">committed</stringProp>
              <stringProp name="1231">true</stringProp>
              <stringProp name="1237">false</stringProp>
            </collectionProp>
            <collectionProp name="-716925611">
              <stringProp name="1883998977">Jboss Garbage Collection Count</stringProp>
              <stringProp name="1173022736">service:jmx:remoting-jmx://${ecm}:9999</stringProp>
              <stringProp name="92668751">admin</stringProp>
              <stringProp name="-904532845">Admin!23</stringProp>
              <stringProp name="-1099049176">java.lang:type=GarbageCollector,name=PS Scavenge</stringProp>
              <stringProp name="37477617">CollectionCount</stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="1231">true</stringProp>
              <stringProp name="1237">false</stringProp>
            </collectionProp>
            <collectionProp name="-498234492">
              <stringProp name="-1878388069">Jboss Garbage Collection Time</stringProp>
              <stringProp name="1173022736">service:jmx:remoting-jmx://${ecm}:9999</stringProp>
              <stringProp name="92668751">admin</stringProp>
              <stringProp name="-904532845">Admin!23</stringProp>
              <stringProp name="-1099049176">java.lang:type=GarbageCollector,name=PS Scavenge</stringProp>
              <stringProp name="-691027285">CollectionTime</stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="1231">true</stringProp>
              <stringProp name="1237">false</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.jmxmon.JMXMonCollector>
        <hashTree/>
        <kg.apc.jmeter.jmxmon.JMXMonCollector guiclass="kg.apc.jmeter.vizualizers.JMXMonGui" testclass="kg.apc.jmeter.jmxmon.JMXMonCollector" testname="jp@gc - JMXMon Samples Collector" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">${__P(results,${default_results_folder})}\\${__P(users,${users_gui})}\\raw\\jmx.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="samplers">
            <collectionProp name="176119803">
              <stringProp name="1517315231">Jboss CPU</stringProp>
              <stringProp name="1173022736">service:jmx:remoting-jmx://${ecm}:9999</stringProp>
              <stringProp name="92668751">admin</stringProp>
              <stringProp name="-904532845">Admin!23</stringProp>
              <stringProp name="1418096973">java.lang:type=OperatingSystem</stringProp>
              <stringProp name="-101473953">ProcessCpuLoad</stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="1237">false</stringProp>
              <stringProp name="1237">false</stringProp>
            </collectionProp>
            <collectionProp name="110141262">
              <stringProp name="-1800330802">Core VM Open File Descriptors</stringProp>
              <stringProp name="1173022736">service:jmx:remoting-jmx://${ecm}:9999</stringProp>
              <stringProp name="92668751">admin</stringProp>
              <stringProp name="-904532845">Admin!23</stringProp>
              <stringProp name="1418096973">java.lang:type=OperatingSystem</stringProp>
              <stringProp name="1641916154">OpenFileDescriptorCount</stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="1237">false</stringProp>
              <stringProp name="1237">false</stringProp>
            </collectionProp>
            <collectionProp name="1458588684">
              <stringProp name="-1314106814">Jboss Thread Count</stringProp>
              <stringProp name="1173022736">service:jmx:remoting-jmx://${ecm}:9999</stringProp>
              <stringProp name="92668751">admin</stringProp>
              <stringProp name="-904532845">Admin!23</stringProp>
              <stringProp name="1641949653">java.lang:type=Threading</stringProp>
              <stringProp name="-158340056">ThreadCount</stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="1237">false</stringProp>
              <stringProp name="1237">false</stringProp>
            </collectionProp>
            <collectionProp name="1160359326">
              <stringProp name="-1587275219">Jboss Heap Memory Usage</stringProp>
              <stringProp name="1173022736">service:jmx:remoting-jmx://${ecm}:9999</stringProp>
              <stringProp name="92668751">admin</stringProp>
              <stringProp name="-904532845">Admin!23</stringProp>
              <stringProp name="-1508861468">java.lang:type=Memory</stringProp>
              <stringProp name="-687755404">HeapMemoryUsage</stringProp>
              <stringProp name="3599293">used</stringProp>
              <stringProp name="1237">false</stringProp>
              <stringProp name="1237">false</stringProp>
            </collectionProp>
            <collectionProp name="1942954334">
              <stringProp name="-457649684">Jboss Heap Memory Allocated (Delta)</stringProp>
              <stringProp name="1173022736">service:jmx:remoting-jmx://${ecm}:9999</stringProp>
              <stringProp name="92668751">admin</stringProp>
              <stringProp name="-904532845">Admin!23</stringProp>
              <stringProp name="-1508861468">java.lang:type=Memory</stringProp>
              <stringProp name="-687755404">HeapMemoryUsage</stringProp>
              <stringProp name="-1491142788">committed</stringProp>
              <stringProp name="1231">true</stringProp>
              <stringProp name="1237">false</stringProp>
            </collectionProp>
            <collectionProp name="-498234492">
              <stringProp name="-1878388069">Jboss Garbage Collection Time</stringProp>
              <stringProp name="1173022736">service:jmx:remoting-jmx://${ecm}:9999</stringProp>
              <stringProp name="92668751">admin</stringProp>
              <stringProp name="-904532845">Admin!23</stringProp>
              <stringProp name="-1099049176">java.lang:type=GarbageCollector,name=PS Scavenge</stringProp>
              <stringProp name="-691027285">CollectionTime</stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="1231">true</stringProp>
              <stringProp name="1237">false</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.jmxmon.JMXMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="jp@gc - PerfMon Jboss Metrics Collector" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="metricConnections">
            <collectionProp name="-1855189979">
              <stringProp name="752950482">ecm156x50.ete.ka.sw.ericsson.se</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="73589">JMX</stringProp>
              <stringProp name="259643518">url=ecm156x50.ete.ka.sw.ericsson.se\:9100:gc-time</stringProp>
            </collectionProp>
            <collectionProp name="675288017">
              <stringProp name="752950482">ecm156x50.ete.ka.sw.ericsson.se</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="73589">JMX</stringProp>
              <stringProp name="1874173557">url=ecm156x50.ete.ka.sw.ericsson.se\:9100:memory-usage</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="jp@gc - PerfMon Weblogic Metrics Collector" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="metricConnections">
            <collectionProp name="-842230013">
              <stringProp name="752950482">ecm156x50.ete.ka.sw.ericsson.se</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="73589">JMX</stringProp>
              <stringProp name="-279453531">url=ecm156x50.ete.ka.sw.ericsson.se\:9998:gc-time</stringProp>
            </collectionProp>
            <collectionProp name="2076199898">
              <stringProp name="752950482">ecm156x50.ete.ka.sw.ericsson.se</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="73589">JMX</stringProp>
              <stringProp name="-1276537170">url=ecm156x50.ete.ka.sw.ericsson.se\:9998:memory-usage</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="jp@gc - PerfMon GlasFish Metrics Collector" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="metricConnections">
            <collectionProp name="-2138806345">
              <stringProp name="1997714963">ecm156x51.ete.ka.sw.ericsson.se</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="73589">JMX</stringProp>
              <stringProp name="1147898246">url=10.61.156.51\:7100:gc-time</stringProp>
            </collectionProp>
            <collectionProp name="1827647189">
              <stringProp name="1997714963">ecm156x51.ete.ka.sw.ericsson.se</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="73589">JMX</stringProp>
              <stringProp name="-1060023699">url=10.61.156.51\:7100:memory-usage</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">C:\Performance\JMeterTestPlans\Performance\tenantusers1.csv</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">tenant,user</stringProp>
        </CSVDataSet>
        <hashTree/>
        <kg.apc.jmeter.listener.GraphsGeneratorListener guiclass="TestBeanGUI" testclass="kg.apc.jmeter.listener.GraphsGeneratorListener" testname="jp@gc - Graphs Generator" enabled="false">
          <boolProp name="aggregateRows">false</boolProp>
          <boolProp name="autoScaleRows">false</boolProp>
          <stringProp name="endOffset"></stringProp>
          <stringProp name="excludeLabels"></stringProp>
          <boolProp name="excludeSamplesWithRegex">false</boolProp>
          <intProp name="exportMode">0</intProp>
          <stringProp name="filePrefix"></stringProp>
          <stringProp name="forceY"></stringProp>
          <stringProp name="granulation">60000</stringProp>
          <intProp name="graphHeight">600</intProp>
          <intProp name="graphWidth">800</intProp>
          <stringProp name="includeLabels"></stringProp>
          <boolProp name="includeSamplesWithRegex">false</boolProp>
          <stringProp name="limitRows">150</stringProp>
          <stringProp name="lineWeight"></stringProp>
          <stringProp name="lowCountLimit"></stringProp>
          <stringProp name="outputBaseFolder"></stringProp>
          <boolProp name="paintGradient">true</boolProp>
          <boolProp name="paintZeroing">true</boolProp>
          <boolProp name="preventOutliers">false</boolProp>
          <boolProp name="relativeTimes">false</boolProp>
          <stringProp name="resultsFileName"></stringProp>
          <stringProp name="startOffset"></stringProp>
          <stringProp name="successFilter"></stringProp>
        </kg.apc.jmeter.listener.GraphsGeneratorListener>
        <hashTree/>
      </hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables NonHa" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="password" elementType="Argument">
            <stringProp name="Argument.name">password</stringProp>
            <stringProp name="Argument.value">${__P(password,PerfMaster123)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">${__P(host,ecm156x50.ete.ka.sw.ericsson.se)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ecm1" elementType="Argument">
            <stringProp name="Argument.name">ecm1</stringProp>
            <stringProp name="Argument.value">${__P(ecm1,ecm156x50.ete.ka.sw.ericsson.se)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pg1" elementType="Argument">
            <stringProp name="Argument.name">pg1</stringProp>
            <stringProp name="Argument.value">${__P(pg1,ecm156x51.ete.ka.sw.ericsson.se)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="blade1" elementType="Argument">
            <stringProp name="Argument.name">blade1</stringProp>
            <stringProp name="Argument.value">${__P(blade1,sl210tx3298.ete.ka.sw.ericsson.se)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="results" elementType="Argument">
            <stringProp name="Argument.name">results</stringProp>
            <stringProp name="Argument.value">${__P(resultsFolder,/app/performance_production/jmeter/log)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="users" elementType="Argument">
            <stringProp name="Argument.name">users</stringProp>
            <stringProp name="Argument.value">${__P(users, 10)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="loops" elementType="Argument">
            <stringProp name="Argument.name">loops</stringProp>
            <stringProp name="Argument.value">${__P(loops,1000)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rampup" elementType="Argument">
            <stringProp name="Argument.name">rampup</stringProp>
            <stringProp name="Argument.value">${__P(rampup,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ecm_jboss_port" elementType="Argument">
            <stringProp name="Argument.name">ecm_jboss_port</stringProp>
            <stringProp name="Argument.value">${__P(ecm_jboss_port,12500)}</stringProp>
            <stringProp name="Argument.desc">JMX port on ECM Core for Jboss </stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pg_dve_port" elementType="Argument">
            <stringProp name="Argument.name">pg_dve_port</stringProp>
            <stringProp name="Argument.value">${__P(pg_dve_port,7100)}</stringProp>
            <stringProp name="Argument.desc">JMX port on PG for DVE</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pg_tomcat_port" elementType="Argument">
            <stringProp name="Argument.name">pg_tomcat_port</stringProp>
            <stringProp name="Argument.value">${__P(pg_tomcat_port,7101)}</stringProp>
            <stringProp name="Argument.desc">JMX port on PG for Tomcat </stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
